[
  {
    "objectID": "posts/conformal-prediction/index.html",
    "href": "posts/conformal-prediction/index.html",
    "title": "What is … conformal prediction",
    "section": "",
    "text": "Conformal prediction is a machine learning framework for uncertainty quantification. It produces statistically valid prediction regions for any underlying point predictor only assuming exchangeability of the data [1]. This is in contrast to traditional point prediction frameworks, which provide a single best estimate for a target variable and often do not quantify the uncertainty associated with that estimate.\nConformal prediction was originally designed for an on-line setting in which labels are predicted successively, each one being revealed before the next is predicted. It requires a user-specified significance level for which the algorithm should produce its predictions. This significance level restricts the frequency of errors that the algorithm is allowed to make.\nFrom the blog post [2] some advantages of conformal prediction are:"
  },
  {
    "objectID": "posts/conformal-prediction/index.html#references",
    "href": "posts/conformal-prediction/index.html#references",
    "title": "What is … conformal prediction",
    "section": "References",
    "text": "References\n\nConformal Prediction (Wikipedia)\nIntroduction To Conformal Prediction With Python\nConformal Prediction for Machine Learning Classification —From the Ground Up"
  },
  {
    "objectID": "posts/website-creation/index.html",
    "href": "posts/website-creation/index.html",
    "title": "Creating the website",
    "section": "",
    "text": "This post outlines my thoughts on how to structure this webpage"
  },
  {
    "objectID": "posts/website-creation/index.html#things-to-do",
    "href": "posts/website-creation/index.html#things-to-do",
    "title": "Creating the website",
    "section": "Things to do",
    "text": "Things to do\n\nFinish the high level organization of the website (i.e. what goes where)\nUnderstand how to set up a unified look and feel"
  },
  {
    "objectID": "posts/website-creation/index.html#organization",
    "href": "posts/website-creation/index.html#organization",
    "title": "Creating the website",
    "section": "Organization",
    "text": "Organization\n\nLanding page\nI decided to use the Bootstrap 5 framework. As a reference I am using:\n\nBootstrap 5 tutorial\nGet started with Bootstrap"
  },
  {
    "objectID": "posts/website-creation/index.html#technical-stuff",
    "href": "posts/website-creation/index.html#technical-stuff",
    "title": "Creating the website",
    "section": "Technical stuff",
    "text": "Technical stuff\n\nSetting up github pages\n\n\nCustom fonts"
  },
  {
    "objectID": "posts/blog-configuration/index.html",
    "href": "posts/blog-configuration/index.html",
    "title": "Configuring the blog",
    "section": "",
    "text": "On this post I keep a record of all the steps needed to configure/publish the blog"
  },
  {
    "objectID": "posts/blog-configuration/index.html#publishing-to-github-pages",
    "href": "posts/blog-configuration/index.html#publishing-to-github-pages",
    "title": "Configuring the blog",
    "section": "Publishing to github-pages",
    "text": "Publishing to github-pages\nI follow the steps described in the Publish command section of the Github pages part of the quarto documentation.\nIn order to use quarto publish from the command line I create a Personal Access token using the instructions here"
  },
  {
    "objectID": "posts/blog-configuration/index.html#adding-custom-domain",
    "href": "posts/blog-configuration/index.html#adding-custom-domain",
    "title": "Configuring the blog",
    "section": "Adding custom domain",
    "text": "Adding custom domain\nWe configure only the main .github.io repository with a custom domain in Github as explained in the guide Managing a custom domain for your GitHub Pages site\nThe guide states that you must only configure a CNAME in the DNS settings but it was necessary to add four A Record as explained in the configuring an apex domain section of the same page."
  },
  {
    "objectID": "posts/quarto-tips/index.html",
    "href": "posts/quarto-tips/index.html",
    "title": "Tips about building quarto documents",
    "section": "",
    "text": "ln [original filename] [link name]"
  },
  {
    "objectID": "posts/quarto-tips/index.html#global-config-files",
    "href": "posts/quarto-tips/index.html#global-config-files",
    "title": "Tips about building quarto documents",
    "section": "",
    "text": "ln [original filename] [link name]"
  },
  {
    "objectID": "posts/quarto-tips/index.html#comments",
    "href": "posts/quarto-tips/index.html#comments",
    "title": "Tips about building quarto documents",
    "section": "Comments",
    "text": "Comments\nInside a latex enumerate environment the comments must be made in the latex format, i.e., using the % sign. In general, outside latex environments html comments should be used"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Understanding Machine Learning",
    "section": "",
    "text": "What is … conformal prediction\n\n\n\n\n\n\npredictive-modeling\n\n\n\n\n\n\n\n\n\nJan 9, 2024\n\n\nRené Valenzuela\n\n\n\n\n\n\n\n\n\n\n\n\nResources for building a Python package\n\n\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\nJul 19, 2023\n\n\nRené Valenzuela\n\n\n\n\n\n\n\n\n\n\n\n\nTips about building quarto documents\n\n\n\n\n\n\nquarto\n\n\nlatex\n\n\n\n\n\n\n\n\n\nJul 13, 2023\n\n\nRené Valenzuela\n\n\n\n\n\n\n\n\n\n\n\n\nThings to follow\n\n\n\n\n\n\nreferences\n\n\n\n\n\n\n\n\n\nJul 12, 2023\n\n\nRené Valenzuela\n\n\n\n\n\n\n\n\n\n\n\n\nCreating the website\n\n\n\n\n\n\nhtml\n\n\ncss\n\n\n\n\n\n\n\n\n\nMay 24, 2023\n\n\nRené Valenzuela\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring the blog\n\n\n\n\n\n\nquarto\n\n\ngithub\n\n\n\n\n\n\n\n\n\nMay 18, 2023\n\n\nRené Valenzuela\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/interesting-follows/index.html",
    "href": "posts/interesting-follows/index.html",
    "title": "Things to follow",
    "section": "",
    "text": "As I progress in the setup of the website this post will become a page on its own … in the meantime I will update the links here"
  },
  {
    "objectID": "posts/interesting-follows/index.html#introduction",
    "href": "posts/interesting-follows/index.html#introduction",
    "title": "Things to follow",
    "section": "",
    "text": "As I progress in the setup of the website this post will become a page on its own … in the meantime I will update the links here"
  },
  {
    "objectID": "posts/interesting-follows/index.html#people",
    "href": "posts/interesting-follows/index.html#people",
    "title": "Things to follow",
    "section": "People",
    "text": "People\n\nCosma Shalizi’s webpage and notebooks (last visited on July 12, 2023)."
  },
  {
    "objectID": "posts/building-python-package/index.html",
    "href": "posts/building-python-package/index.html",
    "title": "Resources for building a Python package",
    "section": "",
    "text": "Packaging Python projects Tutorial from the Python packaging authority that walks you through how to package a simple python project\nPython packages Open source book by Tomas Beuzen & Tiffany Timbers that describes modern and efficient workflows for creating python packages"
  },
  {
    "objectID": "posts/building-python-package/index.html#which-backend-should-i-use-for-building-the-package",
    "href": "posts/building-python-package/index.html#which-backend-should-i-use-for-building-the-package",
    "title": "Resources for building a Python package",
    "section": "Which backend should I use for building the package?",
    "text": "Which backend should I use for building the package?\nFollowing the guidelines described here the main requirement for the backend is that it is PEP517 and PEP621 compliant. Popular options (at the time of writing of the blog post) are: flit-core, hatchling, pdm-backend, and setuptools (&gt;=61).\nSince the Pypa tutorial uses hatch I will stay with that one for the moment."
  },
  {
    "objectID": "posts/building-python-package/index.html#how-to-distribute-the-package-without-putting-it-on-pypi",
    "href": "posts/building-python-package/index.html#how-to-distribute-the-package-without-putting-it-on-pypi",
    "title": "Resources for building a Python package",
    "section": "How to distribute the package without putting it on Pypi?",
    "text": "How to distribute the package without putting it on Pypi?\nThe package repositories section of Python packages states that you can use pip to install from a github repository. You can install from a repository branch, a specific commit, or a tag."
  },
  {
    "objectID": "posts/building-python-package/index.html#how-to-install-the-package-after-its-been-build-locally-to-run-the-tests",
    "href": "posts/building-python-package/index.html#how-to-install-the-package-after-its-been-build-locally-to-run-the-tests",
    "title": "Resources for building a Python package",
    "section": "How to install the package after its been build locally to run the tests?",
    "text": "How to install the package after its been build locally to run the tests?\nI use conda as a package manager. I install the package using pip in a conda environment different than the one where I am developing the package and then run pytest on the folder"
  },
  {
    "objectID": "posts/building-python-package/index.html#how-should-versioning-be-handled",
    "href": "posts/building-python-package/index.html#how-should-versioning-be-handled",
    "title": "Resources for building a Python package",
    "section": "How should versioning be handled?",
    "text": "How should versioning be handled?\nOne possibility is to use python semantic release tool. This requires that commits are in the Angular commit style."
  },
  {
    "objectID": "posts/building-python-package/index.html#which-git-workflow-should-we-use-when-developing",
    "href": "posts/building-python-package/index.html#which-git-workflow-should-we-use-when-developing",
    "title": "Resources for building a Python package",
    "section": "Which git workflow should we use when developing?",
    "text": "Which git workflow should we use when developing?\nA complete example demonstrating a Feature Branch Flow is as follows. Assuming we have a repo setup with a main branch source\n\nExamples\ngit checkout main\ngit checkout -b develop\ngit checkout -b feature_branch\n# work happens on feature branch\ngit checkout develop\ngit merge feature_branch\ngit checkout main\ngit merge develop\ngit branch -d feature_branch"
  },
  {
    "objectID": "posts/building-python-package/index.html#what-are-the-steps-for-creating-a-release",
    "href": "posts/building-python-package/index.html#what-are-the-steps-for-creating-a-release",
    "title": "Resources for building a Python package",
    "section": "What are the steps for creating a release?",
    "text": "What are the steps for creating a release?"
  }
]